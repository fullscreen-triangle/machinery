[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hatata"
version = "0.1.0"
description = "Stochastic health decision system using Markov Decision Processes and utility optimization"
authors = [
    { name = "Machinery Team", email = "team@machinery.dev" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"
keywords = ["markov-decision-process", "stochastic", "utility-optimization", "health-decisions", "evidence-integration"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Mathematics",
]

dependencies = [
    # Core scientific computing
    "numpy>=1.21.0",
    "scipy>=1.8.0",
    "pandas>=1.4.0",
    
    # Markov Decision Processes and Reinforcement Learning
    "gymnasium>=0.26.0",
    "stable-baselines3>=1.6.0",
    "pymdptoolbox>=4.0.3",
    
    # Stochastic processes and optimization
    "scikit-learn>=1.2.0",
    "statsmodels>=0.13.0",
    "pymc>=5.0.0",
    "arviz>=0.12.0",
    
    # Optimization and decision theory
    "cvxpy>=1.3.0",
    "pulp>=2.7.0",
    "networkx>=2.8.0",
    
    # Probabilistic programming and uncertainty
    "pomegranate>=0.14.0",
    "pyro-ppl>=1.8.0",
    
    # Data processing and validation
    "pydantic>=1.10.0",
    "fastapi>=0.95.0",
    
    # Time series and temporal modeling
    "prophet>=1.1.0",
    
    # Visualization for stochastic analysis
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.10.0",
    "graphviz>=0.20.0",
    
    # Utilities
    "requests>=2.28.0",
    "python-dotenv>=0.19.0",
    "typer>=0.7.0",
    "rich>=12.0.0",
    
    # Integration with other systems
    "mzekezeke>=0.1.0",
    "diggiden>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=0.990",
    "pre-commit>=2.20.0",
]

advanced = [
    "tensorflow>=2.10.0",
    "torch>=1.12.0",
    "jax>=0.4.0",
    "optax>=0.1.0",
]

research = [
    "jupyter>=1.0.0",
    "jupyterlab>=3.4.0",
    "ipywidgets>=8.0.0",
    "papermill>=2.4.0",
]

[project.urls]
Homepage = "https://github.com/fullscreen-triangle/machinery"
Documentation = "https://fullscreen-triangle.github.io/machinery"
Repository = "https://github.com/fullscreen-triangle/machinery"
"Bug Tracker" = "https://github.com/fullscreen-triangle/machinery/issues"

[project.scripts]
hatata = "hatata.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=hatata --cov-report=term-missing" 